/**
 * This is a plugin and is treated differently than the other projects.
 * The other projects in this repo are considered subprojects by gradle but
 * this is separate.
 *
 * The subprojects are initialized with the gradle include command (makes them subprojects)
 * but the plugin is initialized with includeBuild gradle command. includeBuild in this
 * context means the subprojects can utilize it as a dependency but this plugin isn't
 * treated like a subproject
 */

plugins {
    id 'signing'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.3.1'
}

// Have to explicitly set this because includeBuild doesn't pass these down
group = 'com.mleitz1.quarkus'
version = '0.1.1'

description = 'A diagnostic plugin to help troubleshoot Quarkus builds including Quarkus native'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

gradlePlugin {
    website = 'https://github.com/mikeleitz/quarkus-native-starters-by-mleitz1'
    vcsUrl = 'https://github.com/mikeleitz/quarkus-native-starters-by-mleitz1.git'
    plugins {
        quarkusBuildHelper {
            id = 'com.mleitz1.quarkus.quarkus-build-helper'
            implementationClass = 'com.mleitz1.quarkus.gradle.QuarkusBuildHelperPlugin'
            displayName = 'Quarkus Build Helper Plugin'
            description = 'A Gradle plugin for diagnosing and troubleshooting Quarkus builds, including native image builds'
            tags = ['quarkus', 'native', 'diagnostics', 'build']
        }
    }
}

validatePlugins {
    enableStricterValidation = true
    failOnWarning = true
}

test {
    useJUnitPlatform()
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

signing {
    // ~/.gradle/gradle.properties needs these values
    // signing.keyId=<use 'gpg --list-secret-keys'. The id will be one of the long numbers and only use last 8 digits here>
    // signing.password=<the password you used when you created the gpg encryption/signing keys. If you don't remember your password, you'll have to create a new set of keys>
    // signing.secretKeyRingFile=<filename secring.gpg in ~/.gnupg>
    sign publishing.publications
}
